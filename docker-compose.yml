version: '3.8'

services:
  php:
    image: usuarios/php
    build:
      context: .
    volumes:
      - ./src:/var/www/html
    environment:
      - DB_HOST=db
      - DB_NAME=user_service
      - DB_USER=root
      - DB_PASS=rootpassword
      - JWT_SECRET=your-super-secret-jwt-key-change-this
    #expose:
    #  - "9000"
    networks:
      - appnet
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

  nginx:
    image: nginx:latest
    #ports:
    #  - "80:80"
    #expose:
    #  - "80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - appnet
      #para el servidor minck es necesario unir el nginx principal con el nginx del servicio
      #docker network create --driver=overlay --attachable sharednet
      - sharednet
    deploy:
      placement:
        constraints:
          - node.role == manager

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: user_service
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - db_data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - appnet
    deploy:
      placement:
        constraints:
          - node.role == manager

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    #expose:
    #  - "8080"
    #ports:
    #  - "8081:8080"
    networks:
      - appnet

  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    #ports:
    #  - "9090:9090"
    #expose:
    #  - "9090"
    networks:
      - appnet
    deploy:
      placement:
        constraints:
          - node.role == manager

  grafana:
    image: grafana/grafana
    #ports:
    #  - "3000:3000"
    #expose:
    #  - "3000"
    networks:
      - appnet
    deploy:
      placement:
        constraints:
          - node.role == manager

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    #ports:
    #  - "8081:80"
    #expose:
    #  - "80"
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: rootpassword
    depends_on:
      - db
    networks:
      - appnet

volumes:
  db_data:

networks:
  appnet:
    driver: overlay
  sharednet:
    external: true
